{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoList","todos","selectedTodo","setSelectedTodo","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onChangeQuery","filterOption","setFilterOption","resetQuery","defaultValue","onChange","e","target","value","placeholder","style","pointerEvents","TodoModal","useState","currentUser","setCurrentUser","useEffect","userId","user","href","email","name","App","visibleTodos","setVisibleTodos","isTodosLoaded","setIsTodosLoaded","setQuery","filteredTodos","useMemo","filter","filterByQuery","toLowerCase","includes","useCallback","event","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.222182b5.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n// https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todoId: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', {\n                      'fa-eye': todo.id !== selectedTodo?.id,\n                      'fa-eye-slash': todo.id === selectedTodo?.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  onChangeQuery: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  filterOption: string,\n  setFilterOption: (option: string) => void,\n  resetQuery: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  filterOption,\n  setFilterOption,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          defaultValue={filterOption}\n          onChange={(e) => setFilterOption(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={resetQuery}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then((user) => setCurrentUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser || !selectedTodo\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${currentUser.email}`}>{currentUser.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterOption, setFilterOption] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setVisibleTodos(todos);\n        setIsTodosLoaded(true);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return visibleTodos.filter(todo => {\n      const filterByQuery = todo.title.toLowerCase().includes(query.toLowerCase());\n\n      switch (filterOption) {\n        case 'all':\n          return filterByQuery;\n\n        case 'active':\n          return !todo.completed && filterByQuery;\n\n        case 'completed':\n          return todo.completed && filterByQuery;\n\n        default:\n          return filterByQuery;\n      }\n    });\n  }, [query, visibleTodos, filterOption]);\n\n  const onChangeQuery = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const reset = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={onChangeQuery}\n                filterOption={filterOption}\n                setFilterOption={setFilterOption}\n                resetQuery={reset}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded\n                ? (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}